---
title: "Data Visualization"
format: html
---

```{r}
library(readr)
library(dplyr)
library(tidyr)
library(forcats) # makes working with factors easier
library(ggplot2)
library(leaflet) # interactive maps
library(DT) # interactive tables
library(scales) # scale functions for visualization
library(janitor) # expedite cleaning and exploring data
library(viridis) # colorblind friendly color pallet
```


## Read data
```{r}
delta_visits <- read_csv("https://portal.edirepository.org/nis/dataviewer?packageid=edi.587.1&entityid=cda8c1384af0089b506d51ad8507641f") %>% 
  janitor::clean_names()
```


## Explore data
```{r}
glimpse(delta_visits)

range(delta_visits$date)

unique(delta_visits$time_of_day)
```


## Preparing data for plotting
```{r}
delta_visits_long <- delta_visits %>% 
  pivot_longer(cols = c("sm_boat","med_boat","lrg_boat","bank_angler",
                        "scientist","cars"), 
               names_to = "visit_type",
               values_to = "count") %>% 
  rename(restore_loc = eco_restore_approximate_location) %>% 
  select(-notes)
```


## Plotting with 'ggplot2'
```{r}
ggplot(delta_visits_long, 
       aes(x = restore_loc, y = count))+
  geom_col()
```


## Calculating daily visits by visit type
```{r}
daily_visits <- delta_visits_long %>% 
  group_by(restore_loc, date, visit_type) %>% 
  summarise(daily_visits = sum(count))
```


## Customizing the plot
```{r}
ggplot(daily_visits,
       aes(x = restore_loc, y = daily_visits))+
  geom_col(fill = "blue")
```

```{r}
ggplot(daily_visits,
       aes(x = restore_loc, y = daily_visits, fill = visit_type))+
  geom_col()+
  labs(x = "Restoration Locations",
       y = "Number of Visits",
       fill = "Type of Visitors",
       title = "Total Number of Visits to Delta Restoration Sites by Visitor Type",
       subtitle = "Sum of all visits July 2017 - March 2018")+
  coord_flip()+
  theme_bw()
```


## Using 'theme()' function to further customize plot
```{r}
ggplot(daily_visits,
       aes(x = restore_loc, y = daily_visits, fill = visit_type))+
  geom_col()+
  labs(x = "Restoration Locations",
       y = "Number of Visits",
       fill = "Type of Visitors",
       title = "Total Number of Visits to Delta Restoration Sites by Visitor Type",
       subtitle = "Sum of all visits July 2017 - March 2018")+
  coord_flip()+
  theme_bw()+
  theme(legend.position = "bottom",
        axis.ticks.y = element_blank())
```


## Saving theme into an object
```{r}
my_theme <- theme_bw(base_size = 16)+
  theme(legend.position = "bottom",
                  axis.ticks.y = element_blank())
```

```{r}
ggplot(daily_visits,
       aes(x = restore_loc, y = daily_visits, fill = visit_type))+
  geom_col()+
  labs(x = "Restoration Locations",
       y = "Number of Visits",
       fill = "Type of Visitors",
       title = "Total Number of Visits to Delta Restoration Sites by Visitor Type",
       subtitle = "Sum of all visits July 2017 - March 2018")+
  coord_flip()+
  my_theme+
  scale_y_continuous(breaks = seq(0,120,20))
```


## Adding sorting variable
```{r}
daily_visits_total <- daily_visits %>% 
  group_by(restore_loc) %>% 
  mutate(n = sum(daily_visits)) %>% 
  ungroup()
```

```{r}
ggplot(daily_visits_total,
       aes(x = fct_reorder(restore_loc, desc(n)), 
           y = daily_visits, 
           fill = visit_type))+
  geom_col()+
  labs(x = "Restoration Locations",
       y = "Number of Visits",
       fill = "Type of Visitors",
       title = "Total Number of Visits to Delta Restoration Sites by Visitor Type",
       subtitle = "Sum of all visits July 2017 - March 2018")+
  coord_flip()+
  my_theme+
  scale_y_continuous(breaks = seq(0,120,20))+
  scale_fill_viridis_d()
```

```{r}
ggsave("figures/visits_restored_sites_delta.jpg", width = 12, height = 6,
       units = "in")
```


## Creating multiple plots at once with 'facet_wrap()'
```{r}
facet_plot <- ggplot(data = daily_visits_total,
       aes(x = visit_type, y = daily_visits,
           fill = visit_type))+
    geom_col()+
    theme_bw()+
    facet_wrap(~restore_loc,
               scales = "free_y", # means y axes can vary by plot
               ncol = 5,
               nrow = 2)+
    scale_fill_viridis_d()+
    labs(x = "Type of visitor",
         y = "Number of Visits",
         title = "Total Number of Visits to Delta Restoration Areas",
         subtitle = "Sum of all visits during study period")+
    theme_bw()+
    theme(legend.position = "bottom",
          axis.ticks.x = element_blank(),
          axis.text.x = element_blank())

facet_plot
```


## Interactive tables with 'DT'
```{r}
locations <- delta_visits_long %>% 
  distinct(restore_loc, .keep_all = T) %>% 
  select(restore_loc, latitude, longitude)
```

```{r}
datatable(locations)
```


## Interactive maps with 'leaflet'
```{r}
leaflet(locations) %>%
    addTiles() %>% # basemap
    addMarkers(
        lng = ~ longitude,
        lat = ~ latitude,
        popup = ~ restore_loc
    )
```

```{r}
leaflet(locations) %>%
    addWMSTiles(
        "https://basemap.nationalmap.gov/arcgis/services/USGSTopo/MapServer/WmsServer",
        layers = "0",
        options = WMSTileOptions(format = "image/png", transparent = TRUE)) %>%
    addCircleMarkers(
        lng = ~ longitude,
        lat = ~ latitude,
        popup = ~ restore_loc,
        radius = 5,
        # set fill properties
        fillColor = "salmon",
        fillOpacity = 1,
        # set stroke properties
        stroke = T,
        weight = 0.5,
        color = "white",
        opacity = 1)
```

